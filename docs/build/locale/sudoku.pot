# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, Robert J. Hwang
# This file is distributed under the same license as the SudokuStudyLib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SudokuStudyLib 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-14 06:19+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\sudoku.rst:2
# f9b0380a967f469ba2bde34ea15a034f
msgid "Package: Sudoku - the OOP method"
msgstr ""

#: ..\..\source\sudoku.rst:4
# 037e08e4de0446058381355cdbe129c2
msgid "This is the oop method to solve the Sudoku."
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box:1
# f819da4868e44945ab1efe0bddbb1682
msgid "A 3x3 Box Object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box:3
# 1a21d52ef30f49e894a325c2668e7a52
msgid "int, the box's id"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box:4
# e74b2403afce47c68e001620763aca3e
msgid "the Point object list of this object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box:6
# 4b34373a9f644646ab63cd9e0a73ef46
msgid "This will replace the original GroupBase's init()"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box.get_group_number:1
# 221a908253d349d9812528a1fb77aae1
msgid "if the unassigned num in this box which it's all possible positions have the same direction, we call it as a GroupNumber"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box.get_group_number:4
# b6c02454294b4f738f2106ae599714b2
msgid "int, find this num, it is a group number in this box"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box.get_group_number:5
# f6f492f219c446029ad42aec0433c554
msgid "list, the Point object list which to find a group number, if it is empty, the function will get all unassigned points to be a list"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box.get_group_number:6
# 07bf5cac88274b24bf54524832aa124e
msgid "bool, to call get_all_pos to not include x-line's unassigned point"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box.get_group_number:7
# 9876fc96036941c9a26d876cf0a7e09b
msgid "bool, as above, but y-line"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Box.get_group_number:9
# 3298f3f2b99e47d7987d7d4f34141016
msgid "GroupNumber, none or a GroupNumber Object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Chain:1
# a0dbd15554e34f23ba6f5c50c4c89b59
msgid "A chain of two and above positions which are not in the same box but in the same line and can form a chain, means the possible number in this chain positions only can be filled in these positions"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Chain:4
# 222b9e8805ce4019a4686372bae319f9
msgid "int list, presents the numbers of this chain"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Chain:5
# 04c51dc0cb044bdc85ca916cd5940ec7
msgid "Point list, presents the positions that form the chain"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase:1
# 57ed005ae0a34bcdbfbf4e7b6ea99c2c
msgid "The Base Class of a Line or Box"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.LineX:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.LineY:3
# e0980331647146a3944ab814ededf016
# 09fd119cefe84258a126c364a12d6fc5
# efa0ee60ffbb4051819a7567a0fc960a
msgid "The init function of a GroupBase object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase:5
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.LineX:5
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.LineY:5
# 06e52fda1cb64951a5e7474ef9f20347
# 66fc9dd81064489cbccce05a5cb8f929
# 3338b5099aeb4123b9cd5654c6bf5a28
msgid "int, the id of this object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase:6
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.LineX:6
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.LineY:6
# c19bbbcce2cc49569d92503ce5f1eeff
# 36dae2acb66d4864b9da49baaba1e334
# afd690c274714b01afb1a88f7d439fea
msgid "the point object list in this object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.allow:1
# ffb62cd408974acbbca32e8fdd7aba0f
msgid "check the group can be filled the number(v)?"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.allow:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_indirect_group_number:5
# 691dd713099f4ce1b492dab89cf88701
# bf0c44d944b54c958b78412938a28714
msgid "int, the number to be checked"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.allow:5
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.allow:7
# 93f4fb31ae204a8fbfb9e897fa17887c
# bcdce4e5a8194dc08f5c2e06ddd6e5c9
msgid "True or False"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.count_num_possible:1
# 6780d11ce1454b5b915ad091a346d949
msgid "get the un-assigned position in this group, and possible numbers only in [count] positions"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.count_num_possible:3
# 26d5506232374b2f99a66705a18df343
msgid "The output format is a tuple list, the tuple has two value, one is number, another is s position list"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.count_num_possible:6
# 9d2f8e4bc0904b46b7aedc36e9343407
msgid "int, how many positions are un-assigned to get"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.count_num_possible:8
# 3204e264cac1460d9f868826e82ba51d
msgid "list, [(num,[p1, p2...]),...]"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_all_pos:1
# 07ad3ead504a4318874dda082462dcfc
msgid "get position list in this group"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_all_pos:3
# d2a834fcb4574e62865426040051cdaf
msgid "list, exclude the positions in it"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_all_pos:4
# f4d5e0140a45447fa290c5bfceea7456
msgid "char, a: all, s:has assigned, u:not assigned"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_all_pos:5
# 91f736cdc61d46b193fbb45693747c22
msgid "int, if method is u and set the number to 1-9, will get all possible pos which are possible to be assigned the num"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_all_pos:6
# de275649434e4208850af2a2455c1cb4
msgid "bool, exclude the x line's positions"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_all_pos:7
# 7182a217e16d44fb99107c48e831c071
msgid "bool, exclude the y line's positions"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_all_pos:8
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.get_all_pos:6
# baf6d955963b42119f232d9245044863
# ca0650d7a9314b1594d516cbd8bcb263
msgid "bool, if set, check it, if it is True, just get the chain positions, or get the un-chained positions"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_all_pos:9
# 515038fb877843b7ba53c97650a71770
msgid "int, if method=\"u\" and possibles!=None, it will only get the possible set's length = possibles"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_all_pos:11
# 9f714648cda746fb98342ec4da25f7a2
msgid "list: a List of Position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_num_pos:1
# b89b1a98d0b345e0a31be25e89f68e07
msgid "get the position of a group which have been filled the number(v"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_num_pos:3
# 95cd0c7af7aa4bf0a7034aa11d5e9efa
msgid "int, the number to be found its position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupBase.get_num_pos:5
# 1d23bbfe02de4def8f92a6961f8185d1
msgid "None or a Point object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupNumber:1
# b0cfc3b067924316ae4feebc35c8987c
msgid "Group Number in Box"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupNumber:3
# 368d7d3605e34bb1a5cfcdb0b2d0cd39
msgid "int, the Box Object Idx"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupNumber:4
# b56d4f38315a4474b3c0211ed2d08c07
msgid "int, the number that the object presents"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupNumber:5
# 5acafb7b54934775b54d97306a963dc6
msgid "Point List, the Point Object List that form this Group Number"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupNumber:6
# dd52fdcad4ee445dae6899ae3a68d5a3
msgid "char, \"x\" or \"y\" means the direction of this Group Number"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.GroupNumber:7
# 9d91cb2b83a646c7bed136f5a897175a
msgid "int, the line(x or y) index"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.LineX:1
# 0350b73706904add8723901dc4ebe2f9
msgid "Line of X"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.LineY:1
# cb4e65b5bce144a68db3d7c396c513d5
msgid "Line of Y"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix:1
# 7a823046aca9450480a64e746ab49f73
msgid "A Table of a Sudoku"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix:3
# 069c4ae0d579434cb60d472a00998e8d
msgid "file, the define file of a sudoku"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix:5
# ce1a93cebe444090b560b12cb8903b9d
msgid "Properties::"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.allow:1
# afb26007d6394532b0129bf6d6f7a25c
msgid "Checking if the position x, y, can be set the value v"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.allow:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.reduce:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.setit:3
# 2b8589847eb84f358c784d9c5442b599
# 587d11619ca049aa8b188caef652d0e8
# c420c958e65e46ea9fc8cbd6add68785
msgid "int, x position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.allow:4
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.reduce:4
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.setit:4
# 847f8f0194fc4bfeab3231ceff0fb810
# df9132a648654cbfb95a9fd940c9a704
# 489325ab3a994236bd05d78aaf1a99ba
msgid "int, y position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.allow:5
# d2e8e7fed6ea43ac9b218301c1567775
msgid "int, the number"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.can_see:1
# 6d5dbb08a8c74105931841decae06132
msgid "get the position list which can see the position, p"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.can_see:3
# e28bbac5661c4f19852f3cd7da5e2bef
msgid "char, \"u\": un-assigned positions, \"a\": all, \"s\": assigned positions"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.can_see:4
# 70924c39792342d6bc2d2b6edf5b09ae
msgid "if method=\"u\", the position must have be possible to be filled the number"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.can_see:6
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.get_all_pos:9
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.sort_unassigned_pos_by_possibles:6
# e271bad8f4de400c87489f2c5ec87d7b
# f8cc61ae9795442398bedea515bc4f31
# 9722a7ba26cb4040b77b90dc576b1b5d
msgid "Point list"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.get_all_pos:1
# cd6819bb7e104b53b421cf35a83adebf
msgid "get all positions, to call the :meth:GroupBase.get_all_pos function to get it"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.get_all_pos:3
# d2a536dfb09842acaf1d95e2b6f13bf4
msgid "Point list, other than the postions in this list"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.get_all_pos:4
# 171d530e34e04a3783b0e996ee749927
msgid "char, \"a\" -- all, \"u\" -- unassigned, \"s\" -- assigned"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.get_all_pos:5
# a4dfbe1bc0684221b8099d8e256c25f7
msgid "int, the unassigned position which has the [num] in its possible numbers"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.get_all_pos:7
# 62bb86d30de14892994d7a2d63a6fbbb
msgid "int, if set, only get the unassigned positions that those possible numbers are equal to it"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.print_rec:1
# 6e04924744a946df9f0a6a6ca898ac3f
msgid "Print all the steps of solving process"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.read:1
# 10085d9f61694f64bfee7a09a622a77e
msgid "Read Sudoku's Define from file"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.read:3
# 021683c09a3d405892f43a23d946c8cf
msgid "file, the sudoku define file, can give it the absolute path name, if only the file name, it would find file in the data path."
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.reduce:1
# 902138fe42d0490c83d4e283a29b51e1
msgid "reduce the position(x, y)'s possible numbers from v"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.reduce:5
# 5044460bac454103be342a5c75c47885
msgid "int, the possible number"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.reduce:6
# 980838d327994a89a92a7d33976e8fee
msgid "str, the description of solving"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.reduce:7
# b7449e8dcb834d2290b96505093de35f
msgid "bool, check or not"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.reduce:8
# ba6e7e78a49241b29a341096ed95be43
msgid "str, the details of solving"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.reduce:10
# c0e38420717c4b19843781694d486ccc
msgid "int, as following code"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.setit:1
# 109772bc36974c25bba3f464b876c47c
msgid "set the position x, y to be the number v"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.setit:5
# d570bf35b4bd4185b6282548d64dadd7
msgid "int, the number of this position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.setit:6
# 1c8dbd9dc90c4740a03f602209511908
msgid "str, the description of the solving"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.setit:7
# 5692765e8ce94fdfb037073f7fd0b3f2
msgid "str, the detail methods of the solving"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.setit:9
# 4c4f46be14624039a9efd1d961b34156
msgid "int, >=1 if set successfully, 0 if it can't be set the number v"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.sort_unassigned_pos_by_possibles:1
# d149cddb5dda419fa6944809b3171342
msgid "Get unassign position's possible number list, format is [p1, p2,...] and Sorted By the possible numbers"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Matrix.sort_unassigned_pos_by_possibles:4
# 77fc1c151511489fb5f288c607725a22
msgid "0 for all, >=2, mean get only the possible numbers for it"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Number:1
# 4e20e22b41e54c65a9c5fae39ba84883
msgid "Number Object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Number:3
# 3d70ac3b055245aba7220ad4a39fe3fa
msgid "You can imagine that an object of this class is equal to a country, every country has its own id from 1-9."
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Number:6
# a677ff70b8b5496f983a9ee8bec59433
msgid "int, the id of the Number, from 1 to 9"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Number.can_see_by_group_number:1
# 1701db3f8a914317bf5f4e73c25030c0
msgid "Check if the position, p1, can be seen of all this number's group number"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Number.can_see_by_group_number:3
# 7407283e129040e8a7f05495427f6596
msgid "Point, a position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Number.can_see_by_group_number:5
# d74574404a75483b9d063ab1e97ae7e7
msgid "gn if can be seen by it, or None"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Number.setit:1
# 64568fe3471d4408b6127536d9e62100
msgid "save assigned position in the p list"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Number.setit:3
# fbbced07c59c4f80b4e9b1bf36f448a8
msgid "Point, a position that are assigned to this object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point:1
# 824ba3b4c4734fd283205acf8cb9f7b5
msgid "A Position in a Sudoku's table"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point:3
# c4bf72e8adbe48a1a8710782ed551e5a
msgid "We can imagine that a Point object is an house"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point:6
# 5f871344a56244e18dc896de42cff5a9
msgid "This is the init of Point Object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point:8
# 1e588e0675de46ba93c0dddb2d4fc417
msgid "int, the x position of this object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point:9
# 76fb72e199d047ccad7e6e6e74331b2c
msgid "int, the y position of this object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point.can_see:1
# 64fe7944906f439fad1f2d93727714d0
msgid "Check this position can see p1?"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point.can_see:3
# f9d27aa140f74e59ae7460f0fd0a86fb
msgid "Point, a point object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point.can_see:4
# 1019878069254a7096267c80b02c81ac
msgid "int, the value can't be 3 or 7 it means the same pos"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point.can_see:6
# c2185ee9849c49c1b16464b617f6ca40
msgid "return code::"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point.can_see_those:1
# 77b7277a5bc948148a218f4191d882dc
msgid "check this position can see which positions in the posList"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point.can_see_those:3
# 09c7ac08828b42109f928bc5775b215e
msgid "list, a [(x, y),...] list"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Point.can_see_those:4
# bd3915ed98914046a4091943674eef17
msgid "list, [(x, y),..."
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod:1
# ea26c50e292f482b9dd518e521587a43
msgid "Method Object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod:3
# 58e3690bfcab42a4bb2d6c5254a94adf
msgid "function, the function name defined in Python"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod:4
# ebca5ee75f9a4556aa064e0ddb737e5c
msgid "int, the sequence of executing solving"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod:5
# bc020de6a7744efebc3e3fcf1e9db0f5
msgid "str, the description of this function"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod:6
# 43558bb55bdb4a718a19742c239fe3d7
msgid "int, the difficult level"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod:7
# 6d13933a6e1848c1a60001e9cfca4c1d
msgid "bool, is it a obvious method for a human"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod.run:1
# 34c66ea7c45b4852b5e9ee191948f441
msgid "To execute a method to solve a sudoku"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod.run:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_inobvious_number:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_line_last_possible_for_number:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_obvious_number:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.compare_result:4
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.emulator:11
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.get_chains:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.guess:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_emulate_possible_in_one_position:7
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_emulate_possible_number_in_group:8
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_group_number:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_two_possible_in_one_position:6
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.set_obvious_method_for_pos:4
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:15
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_chain:4
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_group_number:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_indirect_group_number:4
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.write_down_possible:5
# 80fdfc9511a746e796b537878a9e97e6
# f358a2534f2b473d9f6b3acb4fba5333
# e8ed0f07b66a42a2abc120eef313a0be
# a47f12f2b205470f8dc3c100bccede95
# 39b9dc9a458d4cd4a79acccf98a06454
# 20c4e805f9b44f519a451cb8855aab68
# a8d4f6d1af9f4d559bc3d4a8fc686f74
# 61826aeb4d8940d4aaf1f556508abadd
# a76bd7d91ace4a16aab79048f5004b6f
# 40dba352b1304d7e9c5f41c2f3a900e5
# ab03e9a55fb44b059cda2ff6f12282b1
# 5b845adff2de4e4cb20c29976def7d58
# 73adf8a690b64162ac95807943b0f00f
# 28f675a3ee984b479396d3c4f10b2366
# e072abaed39444daba54aa98c32a1714
# 57cf6717487c46ccbe624b4ce1edff01
# a5652b9b1c6442e2a35c0b3418c6d1c6
# 1ef0c170e7cb45b38ceb9922288e26df
msgid "Matrix object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod.run:4
# d590c66ce7244ad39f339d7c2b194dd5
msgid "first(int), only(bool)"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SolveMethod.run:6
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_inobvious_number:7
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_line_last_possible_for_number:5
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_obvious_number:7
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_last_position_by_setting:7
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_last_position_of_group:5
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_only_one_possible:7
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.guess:6
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_emulate_possible_in_one_position:9
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_emulate_possible_number_in_group:10
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_group_number:5
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_two_possible_in_one_position:8
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_chain:6
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_group_number:6
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_indirect_group_number:11
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.write_down_possible:7
# d87b03e39692458b8aa4ab7c6de5399b
# c449203a225b4938a55f43764aa0e7bd
# bb481e460347452a939b6fa372caea48
# 4b7c7efc4ec14e5e9a547e66516c3981
# 5f094d8e405f403087d5eeb4a7d9fd2a
# b67a66d6e1d04e5ea2add0bac1749123
# 85b0e2875b084628a150eb7088691ae2
# c2f1e18c7c9f4f0693170757064ef6b2
# 600c60a722324efeae42c87816a171d3
# 9bcebf18ea704901804797b80b5cc68d
# 88091a3a35fa4767a102d433828cdddf
# 2038dfee8fd540a2b47786665bde23bb
# 435b5892a06540838b047984d561fe3f
# 8848097f27a14b12a43dabe548bde897
# 5f49da18322342be84a987efb9a59dc4
# ee2afd517fb444b08e2c49d1ec6089f3
msgid "tuple, (sets, reduces, method index, first, only), as following"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.Status:1
# c8188af0d6f34318b6c0181bfcba5805
msgid "To Store running condition"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuDone:1
# 265d560d7cf840049d2fdab2b4e42656
msgid "An exception When the table has been filled 81 positions"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuDone:3
# 4173721891bd45a1a37be05841727bf6
msgid "int, last position x, when done"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuDone:4
# bb84240eda994c27b09d9238ea6ec6ff
msgid "int, last position y, when done"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuDone:5
# 656795279c0b413abb0bae113c45e5a6
msgid "int, the last number be set, when done"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuError:1
# 027fd1763a40435d84c9622ff9aa85b8
msgid "An exception when x, y can't be set or reduce to or form the number v t: is the type: 's' means set, 'r' means reduce"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuError:4
# a61000b034de4adeb9192f500750c3a9
msgid "int, position x, which occurs an error"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuError:5
# 00b6f0b6f3d243a9baad549a09199b48
msgid "int, position y, which occurs an error"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuError:6
# 4b7b004c66264560bbc4175a4df5842f
msgid "int, the number be set or reduced that occurs an error"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuError:7
# 3f277c0698604c859111ffcc369634b8
msgid "char, \"s\" -- set, \"r\" -- reduce"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuStop:1
# a5784dd864dd4bfeac34b730b964c554
msgid "An exception When the the record number >= recLimit"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuWhenPosSet:1
# 5961a47168b64f939448bbfe808bca2f
msgid "An exception When the position, checkPos, has been set, and program want to setit"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuWhenPosSet:3
# 436255e7a28e46fdb291dc211059507c
msgid "int, position x, when one of the check positions has been set"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuWhenPosSet:4
# 7d0c768100b04818986cfef77ab3dba1
msgid "int, position y, when one of the check positions has been set"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.SudokuWhenPosSet:5
# cb0327ae6f854deb8249c9adbbdae59b
msgid "int, the number be set"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_inobvious_number:1
# 8fca8c924a3348fe8465449cf9e7f38f
msgid "Check every number which has been assigned and known as group-number and its effect's boxes' does not have assigned that number\""
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_inobvious_number:4
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_obvious_number:4
# 5306b71414cd479593bf86df6c05ed17
# a0abf30da9c54de38fee3d104694ca12
msgid "the first number to be checked"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_inobvious_number:5
# 69e6fe02a4c7409ea6f8e0ba027a224f
msgid "bool, False -- check all numbers, True -- check the first number only"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_line_last_possible_for_number:1
# 2a4a0fa54ecf4f3aae7c2233fc6e30b5
msgid "Check every line that only have one position for un-assigned number"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_obvious_number:1
# 2143f431811a4f268247e9b4fc3d8bd8
msgid "Check every number which has been assigned and its effect's boxes' does not have assigned that number"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.check_obvious_number:5
# dcc7578a06da43cabe2b64ad3f132110
msgid "False, check all numbers, True, check the first number only"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.compare_result:1
# f574a43939e04969981744e64c3695a3
msgid "compare the result list, to check if there are same result in every step after the last record of original m.rec if same for all emulate result, it means that it must be true, so can do by it"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.compare_result:5
# 9266c472ecbc4fe9a0179894205dc0ea
msgid "a two dimension list, [[Point, Assigned Number],...]"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.compare_result:6
# 4463c86025a54b88861e2336a82221e7
msgid "Matrix list, the list of Matrix object of emulating results"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.compare_result:8
# 3ad21316fa984ccfa7748f3c662bcb15
msgid "tuple, (sets, reduces), sets: the amount of setting, reduces: the amount of reducing"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.emulator:1
# 5870ebbf3bfc4ddb8300562aa898c2c4
msgid "emulate the x, y to be set v, then start to use some basic methods to try to solve it will stop when and return::"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.emulator:9
# 03a621178e8044358cf85d3ea650decb
msgid "and the result matrix"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.emulator:12
# f72616ca14a2411bab8a4a3d6e4c256a
msgid "int, the start x position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.emulator:13
# 15cf74b3f9134770af5f59be83919be1
msgid "int, the start y position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.emulator:14
# 282599994ccd49b4984e505320292c14
msgid "int, the number to be emulated be in the (x, y) position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.emulator:15
# 3862fa1e4a704558a84cc8038a18dc61
msgid "Point list, tho target list to be checked"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.emulator:16
# 0ef67c72533042c3be378cec0d7df597
msgid "int, when the targets be set, it will check whether the checkval has been assigned in those"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.emulator:18
# 54145628c20c4d899d4f0f632f47d6c7
msgid "tuple, (rtn, matrix, idx)"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_last_position_by_setting:1
# 473a392024964f479e82ef1cd5883dbf
msgid "When setting a number, may cause 1-3 groups left only one possible position check if a group have only position left, just set it."
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_last_position_by_setting:4
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_last_position_of_group:3
#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_only_one_possible:3
# d6cd3d52acc74349a13dcfaf91be0eb3
# 6871c59525fe425b812f8aff6ae25c44
# fec737ad65424b96834aa928a2ad99ea
msgid "Matrix Object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_last_position_by_setting:5
# c650e94477694451aadf9424a9a2aec0
msgid "int, how many last sets want to be checked"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_last_position_of_group:1
# b44d6a1d6de043afa5091481057efcc3
msgid "If the un-assigned positions in a group(line or box) are only one left"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_only_one_possible:1
# ec460c4df24d4fc0a1b216a6c384f479
msgid "Check every unassigned position, if it's possible numbers left one only WRITEN_POSSIBLE_LIMIT:  True, Check position's writen is True or note False, don't check."
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_only_one_possible:4
# 4b5761e57d93408eabb80cf2abbb0360
msgid "int, the first number of checking"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.fill_only_one_possible:5
# bbbe0245a4024230846d91fa4db0a0d2
msgid "bool, just check the first number or not"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.get_chains:1
# 2fa1ff76fcd34a48932e529f95db9189
msgid "get the possible positions(pos) numbers chain"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.get_chains:4
# 23fa2cb94828400ba285155ffbcb240b
msgid "lineX or lineY or Box object"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.get_chains:5
# e367b053471844d3b47060b68fa4aad1
msgid "Point list of a group"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.get_chains:6
# 2baf24899a5a42e6aaeb29fe1a164048
msgid "int, the amount of the numbers to form a chain"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.get_chains:8
# e098bbe5e1da443ca874cbf3c29702f7
msgid "Chain list"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.guess:1
# bf0568b8cd824a4f9517e9c91765b3ca
msgid "Guess every possible number in a position by from the min possibles of positions"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.guess:4
# eb0358e0996f4f2086c5a49254d46709
msgid "int, 0 means the new guess, others mean the idx of the possible number of a position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_emulate_possible_in_one_position:1
# 1ce5432528a4400ba416766e27a691ea
msgid "when a position(p1) has 2 or more possible numbers, we can emulate every possible number and get its result::"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_emulate_possible_number_in_group:1
# c94c88b8eb0e491382e33f50f4cd0fe4
msgid "when a group(lineX, lineY, Box) has 2 or more position have the same possible number, we can emulate every position to set the number and get its result::"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_group_number:1
# 8b13482e58024df1a46806c87ff17605
msgid "Reduce the possible number in a posiition by GroupNumber"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reduce_by_two_possible_in_one_position:1
# 31d13888ff02458c83bede252b937643
msgid "when a position(p1) has two possible numbers only, we can assume if the position is one number(first) then try to emulate to set the position with the other number(second), then see the first number will be filled in a position(p2) which the position can see it if so, we can reduce all these positions which can see p1 and p2 at the same time from the first number"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reg_method:1
# ac65e3f839894a958b718074d66addbd
msgid "register all method as an object and save them into a list to return"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.reg_method:3
# 8237af0348294801bad36f87dbe69be7
msgid "SolveMethod list"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.set_obvious_method_for_pos:1
# 70cd1ff6ca3f4e8688edafef954c29c5
msgid "Check is there an more obvious method for the position, p1 than method1 Obvious methods include fillLastPositionOfGroup=0 and checkObviousNumber=1"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.set_obvious_method_for_pos:5
# 595bc490139e4254a3c04a9acb4fe6a5
msgid "int, method index"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.set_obvious_method_for_pos:6
# 9f0013114d814843b886970a0d5bb916
msgid "Point, the postion to be checked"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.set_obvious_method_for_pos:7
# c27280edffea4d13a4dfc3c44d2309b9
msgid "int, the number to be assigned"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.set_obvious_method_for_pos:9
# 16a03b62b57e4cacb34065e196a31035
msgid "True: set, False: not set"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:1
# 29e86288378e4743baec58260b1c86aa
msgid "Solve a sudoku which define in a file!"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:3
# 57eac2025eda456ea217c36ff033628d
msgid "int, the limit for the method loops, 0: no limits"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:4
# ab846e798e2e403f82f0f728ed7bce9e
msgid "int, for debug, when the records >= recLimit, it will stop, 0: no limits"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:5
# d6222564bc76487ba9546b5f1d2afded
msgid "int, for debug, to set the a (x,y) list to check, it will stop when these positions have been set"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:6
# 811abab48b5c441482fa9b9ecb0c741e
msgid "int, limit the methods using, 0 -- no limit, >0 -- just using the methods which lever < level_limit"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:7
# 223574d9867e4317b4da5c9dd4749727
msgid "imt, if using emulator method, this tells the emulator just emulate in emu_limits possible numbers or positions"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:8
# f68acb37399245bca6c62b6eff37c004
msgid "bool, using guess method or not"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:9
# 0b09447edb2b4011b13f01bf95125eba
msgid "bool, using emulator methods or not"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:10
# 173a1f9050394c3084c56164176d6d61
msgid "bool, printing the solving steps of not"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:12
# 762a0a83a4694f6f9ed0a157a053061c
msgid "when a method can solve the sudoku"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.solve:13
# c456cdda56e7477eae6089baff498173
msgid "when a step will break the rules of sudoku game"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.try_error:1
# bf6df8e59c194297baaec304701a3d30
msgid "Try Error Method, only fill the first possible position"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.try_error:5
# 565dd615bfc347c7b1d6e6a23fca5d4d
msgid "Matrix object, if it is None, you should give it the sudoku define file"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.try_error:6
# 881678b9eb1e4dac8c6063ff703a8988
msgid "file, the sudoku define file"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.try_error:7
# 22836c8fe1d842bd97ac2af225822545
msgid "int, count the call depth of this function"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.try_error:9
# e070740c26524caab439ca36ebbec669
msgid "bool, True if the sudoku has been solved"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_chain:1
# f76137b526fd454f950dd5965329b044
msgid "Update the chain of line return: >=0 means the chain number's amount in the matrix, m"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_group_number:1
# a925ebe5b2374e308c0fbef2416793b8
msgid "Update the group number, num, in a box, and store those group number in m.n.group list"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_group_number:4
# 5649e25091d947259ec7499a0a6e4c21
msgid "the number to be updated"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_indirect_group_number:1
# 3c31d3cead9a4029b761e74eec6817fa
msgid "Update in-direct Group Number, formed by the assigned number and Group Number already known, a recursive function"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_indirect_group_number:6
# 765d7284065f46db88b528ebf0629faf
msgid "int, the amount of Group Number found"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_indirect_group_number:7
# dd091321fa85432a823633601ab4d753
msgid "int, the method idx which will be called when it return back to another method"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_indirect_group_number:8
# e860c0504df24fe2b404466a078d4214
msgid "int, the pointed number to be checked firstly when it return back to another method"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.update_indirect_group_number:9
# 774c49ed78d84a8f92140e075e4e12c0
msgid "bool, just check the first number or not when it return back to another method"
msgstr ""

#: ..\..\..\sudoku\sudoku.py:docstring of sudoku.sudoku.write_down_possible:1
# c944c6851d5c4a69bdc798bacbd126e1
msgid "Write down the possible numbers in every un-assigned position if WRITEN_POSSIBLE_LIMITS has set to 1..9, it will only write down the possibles which <= that limits"
msgstr ""

