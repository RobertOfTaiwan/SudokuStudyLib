# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, Robert J. Hwang
# This file is distributed under the same license as the SudokuStudyLib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SudokuStudyLib 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-16 10:17+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\program.rst:2
# ee782c296fff428a8c7841f1224305f3
msgid "Start Programming to Solve a Sudoku"
msgstr ""

#: ..\..\source\program.rst:4
# 762f73e731c4429689d01f172e51b3fc
msgid "When we have created a sudoku simulate world in the computer to solve a sudoku, now we should go ahead to implement some methods which we solve it in our own hands. In other world, programming, is the stuff which we teach computer to do something that we have known it."
msgstr ""

#: ..\..\source\program.rst:7
# 99fc7c9f580846f48e4de031e97e85b9
msgid "We first introduce the solve environment, then we will introduce some basic methods in this library."
msgstr ""

#: ..\..\source\program.rst:11
# 7da0ea8354af4cb398b13e9301efc812
msgid "Solving Environment"
msgstr ""

#: ..\..\source\program.rst:13
# 483f63747291469197927b651a9b3cd2
msgid "We create a function solve() to do the real solving a sudoku, and we make two exception classes, SudokuDone, SudokuError to capture event happen when we use methods to solve a sudoku."
msgstr ""

#: ..\..\source\program.rst:15
# 46a6c0349d1b49d2b63466b892338a22
msgid "What is \"Exception\"?"
msgstr ""

#: ..\..\source\program.rst:17
# 184cc822ecdc43adb3e64b950b1d28d8
msgid "Exception is an event defined, when the event condition has occurred, system will stop the processing and jump to the exception processing. There are two major exceptions in the environment:"
msgstr ""

#: ..\..\source\program.rst:21
# e822c73c017b4e538c358d5186354315
msgid "SudokuDone:"
msgstr ""

#: ..\..\source\program.rst:21
# 97d286d1a5a145c5b38f2d4abe1ad3e2
msgid "when the sudoku has been solved, will raise this exception"
msgstr ""

#: ..\..\source\program.rst:23
# 798ae144cf9b40988960b71585d9f7e1
msgid "SudokuError:"
msgstr ""

#: ..\..\source\program.rst:24
# d505098ae8dc4e4d9b5492fe415156bb
msgid "when a country people to set in a house, but will break the rule of game, this will raise this exception"
msgstr ""

#: ..\..\source\program.rst:26
# 148bcded65be428ab5f73a793a6c2f5e
msgid "To let the environment know how many methods they can use to solve a sudoku, we create a class, SolveMethod. We use this class to create all methods in a BRAIN. We can treat this BRAIN like the god of this valley. Every time, when people don't how to choose their suitable houses, you can ask the god of valley, and it will give an answer, or it would say that, \"**I don't know how to do either!**\""
msgstr ""

#: ..\..\source\program.rst:29
# 039248514e3a4170b835dd7f1f929a84
msgid "Every method register in the Brain as a SovleMethod object, they have these major properties:"
msgstr ""

#: ..\..\source\program.rst:31
# 6f9dc1c975e84e4982c424474d056a8f
msgid "fun: the function name of the method in python coding"
msgstr ""

#: ..\..\source\program.rst:32
# dc315d80f4c845bba114e34660cfd7cb
msgid "idx: the index of the method, from the easier to the more difficult, the brain will use this sequence to solve a game one by one."
msgstr ""

#: ..\..\source\program.rst:33
# 110a0a3fb4b34d65a4d25cb04295856d
msgid "name: the name of the method"
msgstr ""

#: ..\..\source\program.rst:34
# 0d696ed410a048a4b8527dca9fe6b10a
msgid "level: the difficult level for human, using to count a game's difficult level"
msgstr ""

#: ..\..\source\program.rst:37
# e22e3aec426048b187a01599027e73a2
msgid "Solving Process"
msgstr ""

#: ..\..\source\program.rst:39
# c214d3842ffc450cbddc13eb3c6041c6
msgid "The following is the flow chart of solve():"
msgstr ""

#: ..\..\source\program.rst:43
# 767b8e1822e347dc894048f59927d53c
msgid "**WORK or NOT WORK?**"
msgstr ""

#: ..\..\source\program.rst:45
# 5e0a05eeb4074724999a3f1bb94e5c1d
msgid "A method works or not means that using this method can:"
msgstr ""

#: ..\..\source\program.rst:47
# 4b6e8963ae294e83b161fe67860b0cf1
msgid "let one or more people to find his or their own house,"
msgstr ""

#: ..\..\source\program.rst:48
# b67719618579456db7a61a03bd6305b1
msgid "OR can let one or more houses know they are not allowed for some countries' people."
msgstr ""

#: ..\..\source\program.rst:50
# 9eabd3f5c4eb42f5a86d6279716d5b8e
msgid "In this flow chart, we know that:"
msgstr ""

#: ..\..\source\program.rst:52
# 7b337629a5644c2c9ae20e8625f93345
msgid "When a method works to set a person or reduce a house's allowed people, it will return to the first method to restart solving the game."
msgstr ""

#: ..\..\source\program.rst:53
# 95d62952bca04215bf0820e7f179e97a
msgid "If a method can't work to solve a game, it will give the game to the next method to solve it."
msgstr ""

#: ..\..\source\program.rst:54
# 4b9fca69a52b4f3b879514b0f7ec326e
msgid "And if final method can't solve a game, it will go out and say \"I can't figure out this game, sorry!\""
msgstr ""

#: ..\..\source\program.rst:55
# 5aadc9a4a83e44c7b51c2461ba778040
msgid "In the solving process, if \"Done\" or \"Error\" event occur, it will go out."
msgstr ""

#: ..\..\source\program.rst:58
# f93bc66d6e604571ad4e5d6e71a4b93a
msgid "Some Basic Methods"
msgstr ""

#: ..\..\source\program.rst:60
# b183995ebf8c4b229d25ea99bc6be605
msgid "fill_only_one_possible:"
msgstr ""

#: ..\..\source\program.rst:62
# 2e7bcd1d2e1a4c6983e514ca48d31b0a
msgid "Find every house in a group, if there is only one house that one country people can live there, that house must let that country's people to live in."
msgstr ""

#: ..\..\source\program.rst:64
# ba0fc6cabb024313aa5927e371bf9ded
msgid "fill_last_position_of_group:"
msgstr ""

#: ..\..\source\program.rst:66
# 33de2f7f49e04035ad12f7af58f00ffa
msgid "When in a group(line or box) are only one left, it must allow only one country people to live there."
msgstr ""

#: ..\..\source\program.rst:68
# 922c566d5d9540889639175de710e1a2
msgid "check_obvious_number:"
msgstr ""

#: ..\..\source\program.rst:70
# 2ca70e486b964d339f3892354dae74fa
msgid "Check every country people who has lived in a house, and when these people observe other boxes which has yet not lived their country people, can find an only house that allowed their country people or not?"
msgstr ""

#: ..\..\source\program.rst:73
# e8885ad89b5b408f8ea6055ad9d21668
msgid "check_inobvious_number:"
msgstr ""

#: ..\..\source\program.rst:75
# 3c39b012c455467386d04cd13bd1c661
msgid "It is the same method as check_obvious_number, but some boxes' houses are formed as a **Group Number**."
msgstr ""

#: ..\..\source\program.rst:0
# d6919804a5f640b180581f0a31f069bf
msgid "What is a **Chain**?"
msgstr ""

#: ..\..\source\program.rst:79
# c28512c6d47a4346ace481ea2029de6b
msgid "Chain is formed by two or above houses. In these houses, the amount of all different possible countries' people are equal to the amount of the houses. When a chain have formed, we can reduce the possible countries' people from the other houses in the same group of this chain."
msgstr ""

#: ..\..\source\program.rst:82
# fe9dd554122549b285280bf888f1d49b
msgid "reduce_by_group_number:"
msgstr ""

#: ..\..\source\program.rst:84
# 950a059b4d00465ea4b0d437dbe44d40
msgid "If there is a **Group Number** in a box, the empty houses of its same direction could be reduce the possible country people of this Group Number."
msgstr ""

#: ..\..\source\program.rst:86
# 06dc6fcf64ea403c8be142da0c112a9f
msgid "update_chain:"
msgstr ""

#: ..\..\source\program.rst:88
# 8a562fa3d8494dddab5d8e22e260b4e6
msgid "As the houses have been lived some people, this would make some empty houses reduce some possible countries' people. And then these empty houses in a group(x-way line, y-way line, box) may form a **Chain**."
msgstr ""

#: ..\..\source\program.rst:92
# cf50594c66dc4628869fa149398b2525
msgid "How to implement a method?"
msgstr ""

#: ..\..\source\program.rst:94
# 993933674b5f4a0191f656596a71d771
msgid "We could implement a method called check_obvious_for_a_country(m, num) method as an example:"
msgstr ""

#: ..\..\source\program.rst:121
# 53f1c749c7ae4dee815a469c7f38c8b5
msgid "line#1, define a method, *m* is the world of this game, and **num** is a country id, here is 1-9."
msgstr ""

#: ..\..\source\program.rst:122
# 5d765c192ab14d9bae1296a2882093a3
msgid "line#3, starts to find the all people who have lived in a house of a country."
msgstr ""

#: ..\..\source\program.rst:123
# b9749a633a194bcf8ae385a0155b89c1
msgid "line#4-9, it scan all its effect boxes if those have not been checked."
msgstr ""

#: ..\..\source\program.rst:124
# ec6b5b81e2aa4f7b836644e19c725ce1
msgid "line#10-11, it the country people have live in this box, ignore it."
msgstr ""

#: ..\..\source\program.rst:125
# d81ad02a3b0b45198fbcdf49668cc41e
msgid "line#12-19, check all empty houses in this box which allow the country's people or not, if yes, put it in the Possible List."
msgstr ""

#: ..\..\source\program.rst:126
# 01fc706a11724555bcd963e6901100c5
msgid "line#20-21, if the Possible List has only one house, it must can be assigned this house to the country's people."
msgstr ""

